{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\exist\\\\Documents\\\\VeganShop\\\\ahimsa\\\\client\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport ShopPage from \"./pages/shop/shoppage.component\";\nimport Menu from \"./components/navbar-component/menu.component\";\nimport SiginAndSignup from \"./pages/signinandsignup/sign-in-and-signup\";\nimport Checkout from \"./pages/checkout-component/checkoutpage.component\";\nimport { userState } from \"./redux/user/user-action\";\nimport { connect } from \"react-redux\";\nimport { selectCurrentUser } from \"./redux/user/user-selector\";\nimport { selectCollectionsForPreview } from \"./redux/shop/shop-selector\";\nimport Header from \"./components/header/header.component\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    const {\n      userState\n    } = this.props;\n    userState();\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => this.props.currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 19\n        }\n      }) : /*#__PURE__*/React.createElement(SiginAndSignup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 19\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/checkout\",\n      component: Checkout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n} //current user is passed as props from the redux store\n\n\nconst mapStateToProps = state => ({\n  currentUser: selectCurrentUser(state),\n  collectionItems: selectCollectionsForPreview(state).map(({\n    title,\n    items\n  }) => ({\n    title,\n    items\n  }))\n});\n\nconst mapDispatchToProps = dispatch => ({\n  userState: () => dispatch(userState())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/exist/Documents/VeganShop/ahimsa/client/src/App.js"],"names":["React","Switch","Route","Redirect","HomePage","ShopPage","Menu","SiginAndSignup","Checkout","userState","connect","selectCurrentUser","selectCollectionsForPreview","Header","App","Component","unsubscribeFromAuth","componentDidMount","props","componentWillUnmount","render","currentUser","mapStateToProps","state","collectionItems","map","title","items","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,IAAP,MAAiB,8CAAjB;AACA,OAAOC,cAAP,MAA2B,4CAA3B;AACA,OAAOC,QAAP,MAAqB,mDAArB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,4BAAlC;AACA,SAASC,2BAAT,QAA4C,4BAA5C;AACA,OAAOC,MAAP,MAAmB,sCAAnB;;AAEA,MAAMC,GAAN,SAAkBd,KAAK,CAACe,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,mBADgC,GACV,IADU;AAAA;;AAEhCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAER,MAAAA;AAAF,QAAgB,KAAKS,KAA3B;AACAT,IAAAA,SAAS;AACV;;AAEDU,EAAAA,oBAAoB,GAAG;AACrB,SAAKH,mBAAL;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEhB,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAKE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,MAAM,EAAE,MACN,KAAKa,KAAL,CAAWG,WAAX,gBACE,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,gBAGE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAgBE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAwB,MAAA,SAAS,EAAEb,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,CAHJ,CAHA,CADF;AA8BD;;AA1C+B,C,CA4ClC;;;AACA,MAAMc,eAAe,GAAIC,KAAD,KAAY;AAClCF,EAAAA,WAAW,EAAEV,iBAAiB,CAACY,KAAD,CADI;AAElCC,EAAAA,eAAe,EAAEZ,2BAA2B,CAACW,KAAD,CAA3B,CAAmCE,GAAnC,CACf,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,MAAuB;AACrBD,IAAAA,KADqB;AAErBC,IAAAA;AAFqB,GAAvB,CADe;AAFiB,CAAZ,CAAxB;;AAUA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCpB,EAAAA,SAAS,EAAE,MAAMoB,QAAQ,CAACpB,SAAS,EAAV;AADe,CAAf,CAA3B;;AAIA,eAAeC,OAAO,CAACY,eAAD,EAAkBM,kBAAlB,CAAP,CAA6Cd,GAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport ShopPage from \"./pages/shop/shoppage.component\";\nimport Menu from \"./components/navbar-component/menu.component\";\nimport SiginAndSignup from \"./pages/signinandsignup/sign-in-and-signup\";\nimport Checkout from \"./pages/checkout-component/checkoutpage.component\";\nimport { userState } from \"./redux/user/user-action\";\nimport { connect } from \"react-redux\";\nimport { selectCurrentUser } from \"./redux/user/user-selector\";\nimport { selectCollectionsForPreview } from \"./redux/shop/shop-selector\";\nimport Header from \"./components/header/header.component\";\n\nclass App extends React.Component {\n  unsubscribeFromAuth = null;\n  componentDidMount() {\n    const { userState } = this.props;\n    userState();\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div>\n          <Menu />\n      \n      <div>\n      \n      \n          <Switch>\n         \n            <Route exact path=\"/\" component={HomePage} />\n            <Route path=\"/shop\" component={ShopPage} />\n            {/*if the user is signed in render the root page else render the authentication page*/}\n            <Route\n              exact\n              path=\"/signin\"\n              render={() =>\n                this.props.currentUser ? (\n                  <Redirect to=\"/\" />\n                ) : (\n                  <SiginAndSignup />\n                )\n              }\n            />\n            <Route path=\"/checkout\" component={Checkout} />\n\n          </Switch>\n        </div>\n        </div>\n      \n    );\n  }\n}\n//current user is passed as props from the redux store\nconst mapStateToProps = (state) => ({\n  currentUser: selectCurrentUser(state),\n  collectionItems: selectCollectionsForPreview(state).map(\n    ({ title, items }) => ({\n      title,\n      items,\n    })\n  ),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  userState: () => dispatch(userState()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}