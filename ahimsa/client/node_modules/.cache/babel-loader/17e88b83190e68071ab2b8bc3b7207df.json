{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\exist\\\\Documents\\\\VeganShop\\\\ahimsa\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport ShopPage from \"./pages/shop/shoppage.component\";\nimport SignInAndSignUpPage from \"./pages/signinandsignup/sign-in-and-signup\";\nimport Header from \"./components/header/header.component\";\nimport { auth, createUser } from \"./firebase/firebase.util\";\nimport { setCurrentUser } from \"./redux/user/user-action\";\nimport { connect } from \"react-redux\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    //Set current user will be sent as a prop to app component from the redux store\n    //we can use this action from the redux store\n    //destructure setCurrentUser from this.props\n    const {\n      setCurrentUser\n    } = this.props;\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        //If userdata dosen't exist then create a new users\n        const userRef = createUser(userAuth, userAuth.displayName, \"called from sigin\"); //returns all the data related to the logged in user merged with user Auth details\n\n        (await userRef).onSnapshot(Snapshot => {\n          setCurrentUser({\n            id: Snapshot.id,\n            ...Snapshot.data()\n          });\n        });\n        return;\n      } //if user is logged out set the state to null\n\n\n      setCurrentUser(userAuth);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/signin\",\n      component: SignInAndSignUpPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/exist/Documents/VeganShop/ahimsa/src/App.js"],"names":["React","Switch","Route","Redirect","HomePage","ShopPage","SignInAndSignUpPage","Header","auth","createUser","setCurrentUser","connect","App","Component","unsubscribeFromAuth","componentDidMount","props","onAuthStateChanged","userAuth","userRef","displayName","onSnapshot","Snapshot","id","data","componentWillUnmount","render","mapStateToProps","state","currentUser","user","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAuBC,QAAvB,QAAuC,kBAAvC;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,mBAAP,MAAgC,4CAAhC;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,0BAAjC;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,GAAN,SAAkBZ,KAAK,CAACa,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,mBADgC,GACV,IADU;AAAA;;AAGhCC,EAAAA,iBAAiB,GAAG;AAClB;AACA;AACA;AACA,UAAM;AAAEL,MAAAA;AAAF,QAAqB,KAAKM,KAAhC;AAEA,SAAKF,mBAAL,GAA2BN,IAAI,CAACS,kBAAL,CAAwB,MAAOC,QAAP,IAAoB;AACrE,UAAIA,QAAJ,EAAc;AACZ;AACA,cAAMC,OAAO,GAAGV,UAAU,CACxBS,QADwB,EAExBA,QAAQ,CAACE,WAFe,EAGxB,mBAHwB,CAA1B,CAFY,CAOZ;;AACA,SAAC,MAAMD,OAAP,EAAgBE,UAAhB,CAA4BC,QAAD,IAAc;AACvCZ,UAAAA,cAAc,CAAC;AAAEa,YAAAA,EAAE,EAAED,QAAQ,CAACC,EAAf;AAAmB,eAAGD,QAAQ,CAACE,IAAT;AAAtB,WAAD,CAAd;AACD,SAFD;AAIA;AACD,OAdoE,CAerE;;;AACFd,MAAAA,cAAc,CAACQ,QAAD,CAAd;AACC,KAjB0B,CAA3B;AAkBD;;AAEDO,EAAAA,oBAAoB,GAAG;AACrB,SAAKX,mBAAL;AACD;;AAEDY,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEtB,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,SAAS,EAAEC,mBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAFF,CADF;AAUD;;AA5C+B;;AA8ClC,MAAMqB,eAAe,GAAIC,KAAD,KAAY;AAClCC,EAAAA,WAAW,EAAED,KAAK,CAACE,IAAN,CAAWD;AADU,CAAZ,CAAxB;;AAIA,MAAME,kBAAkB,GAAIC,QAAD,KAAe;AACxCtB,EAAAA,cAAc,EAAGoB,IAAD,IAAUE,QAAQ,CAACtB,cAAc,CAACoB,IAAD,CAAf;AADM,CAAf,CAA3B;;AAIA,eAAenB,OAAO,CAACgB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CnB,GAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { Switch, Route,Redirect } from \"react-router-dom\";\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport ShopPage from \"./pages/shop/shoppage.component\";\nimport SignInAndSignUpPage from \"./pages/signinandsignup/sign-in-and-signup\";\nimport Header from \"./components/header/header.component\";\nimport { auth, createUser } from \"./firebase/firebase.util\";\nimport { setCurrentUser } from \"./redux/user/user-action\";\nimport { connect } from \"react-redux\";\n\nclass App extends React.Component {\n  unsubscribeFromAuth = null;\n\n  componentDidMount() {\n    //Set current user will be sent as a prop to app component from the redux store\n    //we can use this action from the redux store\n    //destructure setCurrentUser from this.props\n    const { setCurrentUser } = this.props;\n\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n      if (userAuth) {\n        //If userdata dosen't exist then create a new users\n        const userRef = createUser(\n          userAuth,\n          userAuth.displayName,\n          \"called from sigin\"\n        );\n        //returns all the data related to the logged in user merged with user Auth details\n        (await userRef).onSnapshot((Snapshot) => {\n          setCurrentUser({ id: Snapshot.id, ...Snapshot.data() });\n        });\n\n        return;\n      }\n      //if user is logged out set the state to null\n    setCurrentUser(userAuth)\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header/>\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/shop\" component={ShopPage} />\n          <Route path=\"/signin\" component={SignInAndSignUpPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  currentUser: state.user.currentUser,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setCurrentUser: (user) => dispatch(setCurrentUser(user)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}