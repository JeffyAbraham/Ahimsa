{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst config = {\n  apiKey: \"AIzaSyCEY9NcbLCRUo1bGQi8wFUEzo7N_B3j5B0\",\n  authDomain: \"ahimsa-a62aa.firebaseapp.com\",\n  databaseURL: \"https://ahimsa-a62aa.firebaseio.com\",\n  projectId: \"ahimsa-a62aa\",\n  storageBucket: \"ahimsa-a62aa.appspot.com\",\n  messagingSenderId: \"736204403852\",\n  appId: \"1:736204403852:web:45c3c91bc49e5b492eb7a9\",\n  measurementId: \"G-X72F7SKDRR\"\n};\nexport const createUser = async (userAuth, displayName) => {\n  //If no user in  logged in just return null\n  if (!userAuth) return;\n\n  if (displayName === null) {\n    return;\n  } //If user is logged in check if the user's data exists in the firebase databasey\n\n\n  const useRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await useRef.get();\n  console.log(snapShot.exists);\n\n  if (!snapShot.exists) {\n    console.log(displayName);\n    const {\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await useRef.set({\n        displayName,\n        email,\n        createdAt\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return useRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/exist/Documents/VeganShop/ahimsa/src/firebase/firebase.util.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUser","userAuth","displayName","useRef","firestore","doc","uid","snapShot","get","console","log","exists","email","createdAt","Date","set","error","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,8BAFC;AAGbC,EAAAA,WAAW,EAAE,qCAHA;AAIbC,EAAAA,SAAS,EAAE,cAJE;AAKbC,EAAAA,aAAa,EAAE,0BALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE,2CAPM;AAQbC,EAAAA,aAAa,EAAE;AARF,CAAf;AAUA,OAAO,MAAMC,UAAU,GAAG,OAAOC,QAAP,EAAiBC,WAAjB,KAAiC;AAEzD;AACA,MAAI,CAACD,QAAL,EAAe;;AACf,MAAGC,WAAW,KAAG,IAAjB,EACA;AACI;AACH,GAPwD,CAQzD;;;AACA,QAAMC,MAAM,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAf;AACA,QAAMC,QAAQ,GAAG,MAAMJ,MAAM,CAACK,GAAP,EAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,MAArB;;AAEA,MAAI,CAACJ,QAAQ,CAACI,MAAd,EAAsB;AACpBF,IAAAA,OAAO,CAACC,GAAR,CAAYR,WAAZ;AACA,UAAM;AAAEU,MAAAA;AAAF,QAAYX,QAAlB;AACA,UAAMY,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACF,YAAMX,MAAM,CAACY,GAAP,CAAW;AACfb,QAAAA,WADe;AAEfU,QAAAA,KAFe;AAGfC,QAAAA;AAHe,OAAX,CAAN;AAKD,KAND,CAME,OAAOG,KAAP,EAAc;AACdP,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACD;AACF;;AACD,SAAOb,MAAP;AACD,CA5BM;AA6BPb,QAAQ,CAAC2B,aAAT,CAAuB1B,MAAvB;AAEA,OAAO,MAAM2B,IAAI,GAAG5B,QAAQ,CAAC4B,IAAT,EAAb;AACP,OAAO,MAAMd,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMe,QAAQ,GAAG,IAAI7B,QAAQ,CAAC4B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe7B,QAAf","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyCEY9NcbLCRUo1bGQi8wFUEzo7N_B3j5B0\",\r\n  authDomain: \"ahimsa-a62aa.firebaseapp.com\",\r\n  databaseURL: \"https://ahimsa-a62aa.firebaseio.com\",\r\n  projectId: \"ahimsa-a62aa\",\r\n  storageBucket: \"ahimsa-a62aa.appspot.com\",\r\n  messagingSenderId: \"736204403852\",\r\n  appId: \"1:736204403852:web:45c3c91bc49e5b492eb7a9\",\r\n  measurementId: \"G-X72F7SKDRR\",\r\n};\r\nexport const createUser = async (userAuth, displayName) => {\r\n\r\n  //If no user in  logged in just return null\r\n  if (!userAuth) return;\r\n  if(displayName===null)\r\n  {\r\n      return\r\n  }\r\n  //If user is logged in check if the user's data exists in the firebase databasey\r\n  const useRef = firestore.doc(`users/${userAuth.uid}`);\r\n  const snapShot = await useRef.get();\r\n  console.log(snapShot.exists);\r\n\r\n  if (!snapShot.exists) {\r\n    console.log(displayName);\r\n    const { email } = userAuth;\r\n    const createdAt = new Date();\r\n    try {\r\n      await useRef.set({\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  return useRef;\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: \"select_account\" });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}