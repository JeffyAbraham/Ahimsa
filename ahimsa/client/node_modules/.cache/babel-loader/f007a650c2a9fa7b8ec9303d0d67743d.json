{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\exist\\\\Documents\\\\VeganShop\\\\ahimsa\\\\client\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport ShopPage from \"./pages/shop/shoppage.component\";\nimport Header from \"./components/header/header.component\";\nimport { userState } from \"./redux/user/user-action\";\nimport { connect } from \"react-redux\";\nimport { selectCurrentUser } from \"./redux/user/user-selector\";\nimport SiginAndSignup from \"./pages/signinandsignup/sign-in-and-signup\";\nimport Checkout from \"./pages/checkout-component/checkoutpage.component\";\nimport { selectCollectionsForPreview } from \"./redux/shop/shop-selector\";\nimport Menu from \"./components/navbar-component/menu.component\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    const {\n      userState\n    } = this.props;\n    userState();\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => this.props.currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 40\n        }\n      }) : /*#__PURE__*/React.createElement(SiginAndSignup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 62\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/checkout\",\n      component: Checkout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    })));\n  }\n\n} //current user is passed as props from the redux store\n\n\nconst mapStateToProps = state => ({\n  currentUser: selectCurrentUser(state),\n  collectionItems: selectCollectionsForPreview(state).map(({\n    title,\n    items\n  }) => ({\n    title,\n    items\n  }))\n});\n\nconst mapDispatchToProps = dispatch => ({\n  userState: () => dispatch(userState())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/exist/Documents/VeganShop/ahimsa/client/src/App.js"],"names":["React","Switch","Route","Redirect","HomePage","ShopPage","Header","userState","connect","selectCurrentUser","SiginAndSignup","Checkout","selectCollectionsForPreview","Menu","App","Component","unsubscribeFromAuth","componentDidMount","props","componentWillUnmount","render","currentUser","mapStateToProps","state","collectionItems","map","title","items","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,4BAAlC;AACA,OAAOC,cAAP,MAA2B,4CAA3B;AACA,OAAOC,QAAP,MAAqB,mDAArB;AACA,SAASC,2BAAT,QAA4C,4BAA5C;AACA,OAAOC,IAAP,MAAiB,8CAAjB;;AAEA,MAAMC,GAAN,SAAkBd,KAAK,CAACe,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,mBADgC,GACV,IADU;AAAA;;AAEhCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEV,MAAAA;AAAF,QAAgB,KAAKW,KAA3B;AACAX,IAAAA,SAAS;AACV;;AAEDY,EAAAA,oBAAoB,GAAG;AACrB,SAAKH,mBAAL;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEhB,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAIE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,MAAM,EAAE,MACN,KAAKa,KAAL,CAAWG,WAAX,gBAAyB,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAzB,gBAA+C,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAWE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAwB,MAAA,SAAS,EAAEV,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CAHF,CADF;AAmBD;;AA/B+B,C,CAiClC;;;AACA,MAAMW,eAAe,GAAIC,KAAD,KAAY;AAClCF,EAAAA,WAAW,EAAEZ,iBAAiB,CAACc,KAAD,CADI;AAElCC,EAAAA,eAAe,EAAEZ,2BAA2B,CAACW,KAAD,CAA3B,CAAmCE,GAAnC,CACf,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,MAAuB;AACrBD,IAAAA,KADqB;AAErBC,IAAAA;AAFqB,GAAvB,CADe;AAFiB,CAAZ,CAAxB;;AAUA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCtB,EAAAA,SAAS,EAAE,MAAMsB,QAAQ,CAACtB,SAAS,EAAV;AADe,CAAf,CAA3B;;AAIA,eAAeC,OAAO,CAACc,eAAD,EAAkBM,kBAAlB,CAAP,CAA6Cd,GAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport ShopPage from \"./pages/shop/shoppage.component\";\nimport Header from \"./components/header/header.component\";\nimport { userState } from \"./redux/user/user-action\";\nimport { connect } from \"react-redux\";\nimport { selectCurrentUser } from \"./redux/user/user-selector\";\nimport SiginAndSignup from \"./pages/signinandsignup/sign-in-and-signup\";\nimport Checkout from \"./pages/checkout-component/checkoutpage.component\";\nimport { selectCollectionsForPreview } from \"./redux/shop/shop-selector\";\nimport Menu from \"./components/navbar-component/menu.component\";\n\nclass App extends React.Component {\n  unsubscribeFromAuth = null;\n  componentDidMount() {\n    const { userState } = this.props;\n    userState();\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header/>\n        <Menu />\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/shop\" component={ShopPage} />\n          {/*if the user is signed in render the root page else render the authentication page*/}\n          <Route\n            exact\n            path=\"/signin\"\n            render={() =>\n              this.props.currentUser ? <Redirect to=\"/\" /> : <SiginAndSignup />\n            }\n          />\n          <Route path=\"/checkout\" component={Checkout} />\n        </Switch>\n      </div>\n    );\n  }\n}\n//current user is passed as props from the redux store\nconst mapStateToProps = (state) => ({\n  currentUser: selectCurrentUser(state),\n  collectionItems: selectCollectionsForPreview(state).map(\n    ({ title, items }) => ({\n      title,\n      items,\n    })\n  ),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  userState: () => dispatch(userState()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}