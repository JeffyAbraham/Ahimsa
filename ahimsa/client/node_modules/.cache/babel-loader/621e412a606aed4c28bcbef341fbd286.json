{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\exist\\\\Documents\\\\VeganShop\\\\ahimsa\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport ShopPage from \"./pages/shop/shoppage.component\";\nimport Header from \"./components/header/header.component\";\nimport { auth, createUser } from \"./firebase/firebase.util\";\nimport { setCurrentUser } from \"./redux/user/user-action\";\nimport { connect } from \"react-redux\";\nimport { selectCurrentUser } from \"./redux/user/user-selector\";\nimport SiginAndSignup from \"./pages/signinandsignup/sign-in-and-signup\";\nimport Checkout from \"./pages/checkout-component/checkoutpage.component\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    //Set current user will be sent as a prop to app component from the redux store\n    //we can use this action from the redux store\n    //destructure setCurrentUser from this.props\n    const {\n      setCurrentUser\n    } = this.props;\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        //If userdata dosen't exist then create a new users\n        const userRef = createUser(userAuth, userAuth.displayName, \"called from sigin\"); //returns all the data related to the logged in user merged with user Auth details\n\n        (await userRef).onSnapshot(Snapshot => {\n          setCurrentUser({\n            id: Snapshot.id,\n            ...Snapshot.data()\n          });\n        });\n        return;\n      } //if user is logged out set the state to null\n\n\n      console.log(userAuth);\n      setCurrentUser(userAuth);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => this.props.currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 40\n        }\n      }) : /*#__PURE__*/React.createElement(SiginAndSignup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 62\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/checkout\",\n      component: Checkout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    })));\n  }\n\n} //current user is passed as props from the redux store\n\n\nconst mapStateToProps = state => ({\n  currentUser: selectCurrentUser(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/exist/Documents/VeganShop/ahimsa/src/App.js"],"names":["React","Switch","Route","Redirect","HomePage","ShopPage","Header","auth","createUser","setCurrentUser","connect","selectCurrentUser","SiginAndSignup","Checkout","App","Component","unsubscribeFromAuth","componentDidMount","props","onAuthStateChanged","userAuth","userRef","displayName","onSnapshot","Snapshot","id","data","console","log","componentWillUnmount","render","currentUser","mapStateToProps","state","mapDispatchToProps","dispatch","user"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport ShopPage from \"./pages/shop/shoppage.component\";\nimport Header from \"./components/header/header.component\";\nimport { auth, createUser } from \"./firebase/firebase.util\";\nimport { setCurrentUser } from \"./redux/user/user-action\";\nimport { connect } from \"react-redux\";\nimport { selectCurrentUser } from \"./redux/user/user-selector\";\nimport SiginAndSignup from \"./pages/signinandsignup/sign-in-and-signup\";\nimport Checkout from \"./pages/checkout-component/checkoutpage.component\";\n\nclass App extends React.Component {\n  unsubscribeFromAuth = null;\n\n  componentDidMount() {\n    //Set current user will be sent as a prop to app component from the redux store\n    //we can use this action from the redux store\n    //destructure setCurrentUser from this.props\n    const { setCurrentUser } = this.props;\n\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n     \n      if (userAuth) {\n        //If userdata dosen't exist then create a new users\n       \n        const userRef = createUser(\n          userAuth,\n          userAuth.displayName,\n          \"called from sigin\"\n        );\n        //returns all the data related to the logged in user merged with user Auth details\n        (await userRef).onSnapshot((Snapshot) => {\n          setCurrentUser({ id: Snapshot.id, ...Snapshot.data() });\n        });\n\n        return;\n      }\n      //if user is logged out set the state to null\n      console.log(userAuth)\n      setCurrentUser(userAuth);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/shop\" component={ShopPage} />\n          {/*if the user is signed in render the root page else render the authentication page*/}\n          <Route\n            exact\n            path=\"/signin\"\n            render={() =>\n              this.props.currentUser ? <Redirect to=\"/\" /> : <SiginAndSignup />\n            }\n          />\n            <Route path=\"/checkout\" component={Checkout} />\n\n        </Switch>\n      </div>\n    );\n  }\n}\n//current user is passed as props from the redux store\nconst mapStateToProps = (state) => ({\n  currentUser: selectCurrentUser(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setCurrentUser: (user) => dispatch(setCurrentUser(user)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}